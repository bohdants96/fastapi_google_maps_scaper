"""empty message

Revision ID: e4c39eee2065
Revises: 63d6808554ee
Create Date: 2024-05-26 19:37:33.850156

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

import sqlmodel.sql.sqltypes

# revision identifiers, used by Alembic.
revision: str = "e4c39eee2065"
down_revision: Union[str, None] = "63d6808554ee"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "scrapeddata",
        sa.Column(
            "country", sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
    )
    op.add_column(
        "scrapeddata",
        sa.Column("city", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    )
    op.add_column(
        "scrapeddata",
        sa.Column("county", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    )
    op.add_column(
        "scrapeddata", sa.Column("scraped_date", sa.DateTime(), nullable=False)
    )
    op.add_column(
        "scrapeddata",
        sa.Column("received_date", sa.DateTime(), nullable=False),
    )
    op.create_index(
        op.f("ix_scrapeddata_business_type"),
        "scrapeddata",
        ["business_type"],
        unique=False,
    )
    op.create_index(
        op.f("ix_scrapeddata_city"), "scrapeddata", ["city"], unique=False
    )
    op.create_index(
        op.f("ix_scrapeddata_country"),
        "scrapeddata",
        ["country"],
        unique=False,
    )
    op.create_index(
        op.f("ix_scrapeddata_state"), "scrapeddata", ["state"], unique=False
    )
    op.drop_column("scrapeddata", "location_id")
    op.drop_column("scrapeddata", "country_id")
    op.drop_column("scrapeddata", "created_at")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "scrapeddata",
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "scrapeddata",
        sa.Column(
            "country_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
    )
    op.add_column(
        "scrapeddata",
        sa.Column(
            "location_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
    )
    op.drop_index(op.f("ix_scrapeddata_state"), table_name="scrapeddata")
    op.drop_index(op.f("ix_scrapeddata_country"), table_name="scrapeddata")
    op.drop_index(op.f("ix_scrapeddata_city"), table_name="scrapeddata")
    op.drop_index(
        op.f("ix_scrapeddata_business_type"), table_name="scrapeddata"
    )
    op.drop_column("scrapeddata", "received_date")
    op.drop_column("scrapeddata", "scraped_date")
    op.drop_column("scrapeddata", "county")
    op.drop_column("scrapeddata", "city")
    op.drop_column("scrapeddata", "country")
    # ### end Alembic commands ###
