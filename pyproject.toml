[build-system]
requires = ["poetry>=0.12"]

[tool.poetry]
name = "app"
version = "0.1.0"
description = ""
authors = ["Admin <admin@example.com>"]

[tool.poetry.dependencies]
python = "^3.10"
uvicorn = {extras = ["standard"], version = "^0.24.0.post1"}
fastapi = "^0.111.0"
python-multipart = "^0.0.9"
email-validator = "^2.2.0"
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
tenacity = "^8.2.3"
pydantic = ">2.0"
emails = "^0.6"

gunicorn = "^22.0.0"
jinja2 = "^3.1.4"
alembic = "^1.12.1"
httpx = "^0.27.0"
psycopg = {extras = ["binary"], version = "^3.1.13"}
sqlmodel = "^0.0.16"
# Pin bcrypt until passlib supports the latest
bcrypt = "4.1.3"
pydantic-settings = "^2.2.1"
sentry-sdk = {extras = ["fastapi"], version = "2.6.0"}
pyjwt = "^2.8.0"
stripe = "^9.9.0"
redis = "^5.0.5"
fastapi-pagination = "^0.12.25"
phonenumbers = "^8.13.39"

[tool.poetry.group.dev.dependencies]
pytest = "^8.2.2"
mypy = "^1.8.0"
ruff = "^0.4.10"
pre-commit = "^3.6.2"
types-passlib = "^1.7.7.20240106"
coverage = "^7.4.3"


[tool.black]
line-length = 79
target_version = ['py311']

[tool.isort]
profile = "black"
line_length = 79
combine_as_imports = true
combine_star = true
remove_redundant_aliases = true

[tool.mypy]
strict = true
exclude = ["venv", ".venv", "alembic"]

[tool.ruff]
target-version = "py310"
exclude = ["alembic"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG001", # unused arguments in functions
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
    "B904",  # Allow raising exceptions without from e, for HTTPException
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true